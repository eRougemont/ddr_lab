<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 4.0//EN" "http://www.tuckey.org/res/dtds/urlrewrite4.0.dtd">
<!--

    Configuration file for UrlRewriteFilter
    http://www.tuckey.org/urlrewrite/

-->
<urlrewrite>
    <!--  qsappend is a bad idea, it appends params to filename -->

    <rule>
        <name>Resource exists</name>
        <condition type="request-filename" operator="isfile"/>
        <to last="true">-</to>
    </rule>
    
    <rule>
        <name>Action</name>
        <from>^/([a-z]+)$</from>
        <!-- send to next -->
        <to last="true">/$1.jsp</to>
    </rule>

    <!-- 
    <rule>
        <name>Book</name>
        <from casesensitive="true">^/(piaget\d\d\d\d[A-Z][A-Z0-9]+)$</from>
        <set name="path">$0</set>
        <to last="true">/book.jsp?book=$1</to>
    </rule>
    -->

    <rule>
        <name>Text</name>
        <from casesensitive="true">^/(ddr\d\d\d\d[^\./]+)</from>
        <set name="path">$0</set>
        <to last="true">/doc.jsp?id=$1</to>
    </rule>

    <rule>
        <name>Data</name>
        <condition type="request-filename" operator="notfile"/>
        <from>^/data/([^\./]+)(\.csv|\.js|\.json|\.ndjson|\.tsv|\.txt)?$</from>
        <to last="true">/data/$1.jsp?ext=$2</to>
    </rule>


    <!-- 

    <rule>
        <name>Static pages, root</name>
        <from>^/([^\./]+)$</from>
        <set name="path">$0</set>
        <to last="true" qsappend="true">/jsp/html.jsp?page=$1</to>
    </rule>
    
    <rule>
        <name>Static pages in a base</name>
        <from>^/([^\./]+)/([^\./]+)$</from>
        <set name="path">$0</set>
        <to last="true" qsappend="true">/jsp/html.jsp?base=$1&amp;page=$2</to>
    </rule>


    <rule>
        <name>Catch all</name>
        <set name="mess">404</set>
        <set name="path">$0</set>
        <to last="true">/jsp/html.jsp</to>
    </rule>
     -->


<!-- 
<rule enabled="true" match-type="regex">
    <name>Enabling CORS Headers</name>
    <from>^/path/someMorePath.*$</from>
    <condition name="origin" operator="equal">([a-z.\/\/0-9]+)</condition>
    <set type="response-header" name="Access-Control-Allow-Origin">%1</set>
    <set type="response-header" name="Access-Control-Allow-Credentials">true</set>
</rule>
 -->
<!-- 

    <condition type="attribute" name="html" operator="isfile"/>
    <rule>
        <name>Set global request attributes</name>
        <note>Bad to have the initial path, reexecuted on request forward</note>
        <condition type="request-filename" operator="notfile"/>
        <set name="path">$0</set>
    </rule>

    <rule>
        <note>
        The rule means that requests to /test/status/ will be redirected to /rewrite-status the url will be rewritten.
        </note>
        <from>/test/status/</from>
        <to type="redirect">%{context-path}/rewrite-status</to>
    </rule>
    
    <outbound-rule>
        <note>
        The outbound-rule specifies that when response.encodeURL is called (if you are using JSTL c:url) the url /rewrite-status will be rewritten to /test/status/. The above rule and this outbound-rule means that end users should never see the url /rewrite-status only /test/status/ both in thier location bar and in hyperlinks in your pages.
        </note>
        <from>/rewrite-status</from>
        <to>/test/status/</to>
    </outbound-rule>
 -->
    

</urlrewrite>